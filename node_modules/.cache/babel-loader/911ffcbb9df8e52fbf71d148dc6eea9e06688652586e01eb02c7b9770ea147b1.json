{"ast":null,"code":"var _jsxFileName = \"/Users/jupudivamsikalyan/Desktop/BlendNet/stock-monitoring-frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ApiService from './ApiService'; // Update the path based on the actual location of ApiService.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [gainers, setGainers] = useState([]);\n  const [losers, setLosers] = useState([]);\n  useEffect(() => {\n    const fetchTopGainersAndLosers = async () => {\n      try {\n        const {\n          gainers,\n          losers\n        } = await ApiService.getTopGainersAndLosers();\n        if (gainers && Array.isArray(gainers) && losers && Array.isArray(losers)) {\n          setGainers(gainers);\n          setLosers(losers);\n        } else {\n          console.error('No gainers or losers data returned from API');\n        }\n      } catch (error) {\n        console.error('Error fetching top gainers and losers:', error);\n      }\n    };\n    fetchTopGainersAndLosers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Gainers and Losers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Gainers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [gainers.map((gainer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `Symbol: ${gainer.symbol}, Change: ${gainer.change}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)), gainers.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No gainers available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Losers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [losers.map((loser, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `Symbol: ${loser.symbol}, Change: ${loser.change}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)), losers.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No losers available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"r7/JkReMCPXA1zHX2OnyWdLdymw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","ApiService","jsxDEV","_jsxDEV","Dashboard","_s","gainers","setGainers","losers","setLosers","fetchTopGainersAndLosers","getTopGainersAndLosers","Array","isArray","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","gainer","index","symbol","change","length","loser","_c","$RefreshReg$"],"sources":["/Users/jupudivamsikalyan/Desktop/BlendNet/stock-monitoring-frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ApiService from './ApiService'; // Update the path based on the actual location of ApiService.js\n\nconst Dashboard = () => {\n  const [gainers, setGainers] = useState([]);\n  const [losers, setLosers] = useState([]);\n\n  useEffect(() => {\n    const fetchTopGainersAndLosers = async () => {\n      try {\n        const { gainers, losers } = await ApiService.getTopGainersAndLosers();\n        if (gainers && Array.isArray(gainers) && losers && Array.isArray(losers)) {\n          setGainers(gainers);\n          setLosers(losers);\n        } else {\n          console.error('No gainers or losers data returned from API');\n        }\n      } catch (error) {\n        console.error('Error fetching top gainers and losers:', error);\n      }\n    };\n\n    fetchTopGainersAndLosers();\n  }, []);\n\n  return (\n    <div>\n      <h1>Top Gainers and Losers</h1>\n      <div>\n        <h2>Gainers</h2>\n        <ul>\n          {gainers.map((gainer, index) => (\n            <li key={index}>{`Symbol: ${gainer.symbol}, Change: ${gainer.change}`}</li>\n          ))}\n          {gainers.length === 0 && <li>No gainers available</li>}\n        </ul>\n      </div>\n      <div>\n        <h2>Losers</h2>\n        <ul>\n          {losers.map((loser, index) => (\n            <li key={index}>{`Symbol: ${loser.symbol}, Change: ${loser.change}`}</li>\n          ))}\n          {losers.length === 0 && <li>No losers available</li>}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}