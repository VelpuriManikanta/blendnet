{"ast":null,"code":"var _jsxFileName = \"/Users/jupudivamsikalyan/Desktop/BlendNet/stock-monitoring-frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ApiService from './ApiService'; // Update the path based on the actual location of ApiService.js\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Tabs, Tab } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [gainers, setGainers] = useState([]);\n  const [losers, setLosers] = useState([]);\n  const [stocks, setStocks] = useState([]); // State to store stock data\n  const [wishlist, setWishlist] = useState([]); // State to store wishlist\n\n  useEffect(() => {\n    const fetchTopGainersAndLosers = async () => {\n      try {\n        const {\n          top_gainers,\n          top_losers\n        } = await ApiService.getTopGainersAndLosers();\n        if (top_gainers && Array.isArray(top_gainers) && top_losers && Array.isArray(top_losers)) {\n          setGainers(top_gainers);\n          setLosers(top_losers);\n        } else {\n          console.error('No gainers or losers data returned from API');\n        }\n      } catch (error) {\n        console.error('Error fetching top gainers and losers:', error);\n      }\n    };\n    fetchTopGainersAndLosers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Gainers and Losers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Gainers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [gainers.map((gainer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `Ticker: ${gainer.ticker}, Price: ${gainer.price}, Change: ${gainer.change_percentage}, Volume: ${gainer.volume}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)), gainers.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No gainers available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Losers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [losers.map((loser, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `Ticker: ${loser.ticker}, Price: ${loser.price}, Change: ${loser.change_percentage}, Volume: ${loser.volume}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)), losers.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No losers available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"6CNWtjuQ6YVoNsDUnMYJRZY52kc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","ApiService","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Tabs","Tab","jsxDEV","_jsxDEV","Dashboard","_s","gainers","setGainers","losers","setLosers","stocks","setStocks","wishlist","setWishlist","fetchTopGainersAndLosers","top_gainers","top_losers","getTopGainersAndLosers","Array","isArray","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","gainer","index","ticker","price","change_percentage","volume","length","loser","_c","$RefreshReg$"],"sources":["/Users/jupudivamsikalyan/Desktop/BlendNet/stock-monitoring-frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ApiService from './ApiService'; // Update the path based on the actual location of ApiService.js\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Tabs, Tab } from '@material-ui/core';\n\nconst Dashboard = () => {\n  const [gainers, setGainers] = useState([]);\n  const [losers, setLosers] = useState([]);\n  const [stocks, setStocks] = useState([]); // State to store stock data\n  const [wishlist, setWishlist] = useState([]); // State to store wishlist\n\n  useEffect(() => {\n    const fetchTopGainersAndLosers = async () => {\n      try {\n        const { top_gainers, top_losers } = await ApiService.getTopGainersAndLosers();\n        if (top_gainers && Array.isArray(top_gainers) && top_losers && Array.isArray(top_losers)) {\n          setGainers(top_gainers);\n          setLosers(top_losers);\n        } else {\n          console.error('No gainers or losers data returned from API');\n        }\n      } catch (error) {\n        console.error('Error fetching top gainers and losers:', error);\n      }\n    };\n\n    fetchTopGainersAndLosers();\n\n    \n  }, []);\n\n  return (\n    <div>\n      <h1>Top Gainers and Losers</h1>\n      <div>\n        <h2>Gainers</h2>\n        <ul>\n          {gainers.map((gainer, index) => (\n            <li key={index}>{`Ticker: ${gainer.ticker}, Price: ${gainer.price}, Change: ${gainer.change_percentage}, Volume: ${gainer.volume}`}</li>\n          ))}\n          {gainers.length === 0 && <li>No gainers available</li>}\n        </ul>\n      </div>\n      <div>\n        <h2>Losers</h2>\n        <ul>\n          {losers.map((loser, index) => (\n            <li key={index}>{`Ticker: ${loser.ticker}, Price: ${loser.price}, Change: ${loser.change_percentage}, Volume: ${loser.volume}`}</li>\n          ))}\n          {losers.length === 0 && <li>No losers available</li>}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}