{"ast":null,"code":"var _jsxFileName = \"/Users/jupudivamsikalyan/Desktop/BlendNet/stock-monitoring-frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\n// Dashboard.js\n\nimport React, { useState, useEffect } from 'react';\nimport ApiService from './ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  useEffect(() => {\n    fetchStocks();\n  }, []);\n  const fetchStocks = async () => {\n    try {\n      const stocksData = await ApiService.getStocks();\n      setStocks(stocksData);\n    } catch (error) {\n      console.error('Error fetching stocks:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [stock.time, \" - \", stock.price]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ckkB5iKANHozGm/BUdCimNAdz7k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","ApiService","jsxDEV","_jsxDEV","Dashboard","_s","stocks","setStocks","fetchStocks","stocksData","getStocks","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","stock","index","time","price","_c","$RefreshReg$"],"sources":["/Users/jupudivamsikalyan/Desktop/BlendNet/stock-monitoring-frontend/src/Dashboard.js"],"sourcesContent":["// Dashboard.js\n\nimport React, { useState, useEffect } from 'react';\nimport ApiService from './ApiService';\n\nconst Dashboard = () => {\n  const [stocks, setStocks] = useState([]);\n\n  useEffect(() => {\n    fetchStocks();\n  }, []);\n\n  const fetchStocks = async () => {\n    try {\n      const stocksData = await ApiService.getStocks();\n      setStocks(stocksData);\n    } catch (error) {\n      console.error('Error fetching stocks:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Stock Dashboard</h1>\n      <h2>Stocks</h2>\n      <ul>\n        {stocks.map((stock, index) => (\n          <li key={index}>\n            {stock.time} - {stock.price}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdQ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,UAAU,GAAG,MAAMR,UAAU,CAACS,SAAS,CAAC,CAAC;MAC/CH,SAAS,CAACE,UAAU,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACER,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBd,OAAA;MAAAU,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfd,OAAA;MAAAU,QAAA,EACGP,MAAM,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBjB,OAAA;QAAAU,QAAA,GACGM,KAAK,CAACE,IAAI,EAAC,KAAG,EAACF,KAAK,CAACG,KAAK;MAAA,GADpBF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACZ,EAAA,CA7BID,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}