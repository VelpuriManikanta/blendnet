{"ast":null,"code":"var _jsxFileName = \"/Users/jupudivamsikalyan/Desktop/BlendNet/stock-monitoring-frontend/src/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, TextField, Button } from '@material-ui/core';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  // State variables to store username and password input values\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // State variable to store error message\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useHistory();\n\n  // Function to handle login button click event\n  const handleLogin = async () => {\n    try {\n      // Make a POST request to the login API endpoint\n      const response = await axios.post('http://localhost:8000/api/login/', {\n        username,\n        password\n      });\n      // If login successful, log the response data (token) and perform necessary actions\n      console.log(response.data); // Assuming backend returns token upon successful login\n      // Redirect to dashboard or perform other actions upon successful login\n      history.push('/dashboard');\n    } catch (error) {\n      // If login fails, display error message\n      setErrorMessage('Invalid username or password');\n      console.error('Login failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      maxWidth: 400,\n      margin: 'auto',\n      marginTop: 50\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        style: {\n          marginBottom: 20\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        style: {\n          marginBottom: 10\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleLogin,\n        style: {\n          marginTop: 20\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"6TInMUKuu8L3OwGLlu1WrjX2cuM=\", true);\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","TextField","Button","axios","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","handleLogin","response","post","console","log","data","push","error","style","maxWidth","margin","marginTop","children","variant","component","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","label","value","onChange","e","target","fullWidth","type","onClick","_c","$RefreshReg$"],"sources":["/Users/jupudivamsikalyan/Desktop/BlendNet/stock-monitoring-frontend/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, Typography, TextField, Button } from '@material-ui/core';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginPage = () => {\n    // State variables to store username and password input values\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    // State variable to store error message\n    const [errorMessage, setErrorMessage] = useState('');\n    const history = useHistory();\n\n    // Function to handle login button click event\n    const handleLogin = async () => {\n        try {\n            // Make a POST request to the login API endpoint\n            const response = await axios.post('http://localhost:8000/api/login/', {\n                username,\n                password\n            });\n            // If login successful, log the response data (token) and perform necessary actions\n            console.log(response.data); // Assuming backend returns token upon successful login\n            // Redirect to dashboard or perform other actions upon successful login\n            history.push('/dashboard');\n        } catch (error) {\n            // If login fails, display error message\n            setErrorMessage('Invalid username or password');\n            console.error('Login failed:', error);\n        }\n    };\n\n    return (\n        <Card style={{ maxWidth: 400, margin: 'auto', marginTop: 50 }}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\" style={{ marginBottom: 20 }}>\n                    Login\n                </Typography>\n                {/* Display error message if any */}\n                {errorMessage && <Typography color=\"error\" style={{ marginBottom: 10 }}>{errorMessage}</Typography>}\n                {/* Username input field */}\n                <TextField\n                    label=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    fullWidth\n                    margin=\"normal\"\n                />\n                {/* Password input field */}\n                <TextField\n                    label=\"Password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    fullWidth\n                    margin=\"normal\"\n                />\n                {/* Login button */}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleLogin} style={{ marginTop: 20 }}>\n                    Login\n                </Button>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}